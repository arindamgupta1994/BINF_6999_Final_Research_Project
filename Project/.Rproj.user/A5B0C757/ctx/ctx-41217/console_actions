{
    "type": [
        3,
        0,
        1,
        3,
        2,
        3,
        2,
        0,
        1,
        3,
        3,
        2,
        3,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        2,
        0,
        1,
        0,
        1,
        3,
        2,
        3,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        2
    ],
    "data": [
        "Failed with error:  ‘there is no package called ‘Biobase’’\nFailed with error:  ‘there is no package called ‘Biobase’’\nFailed with error:  ‘there is no package called ‘Biobase’’\nFailed with error:  ‘there is no package called ‘Biobase’’\nFailed with error:  ‘there is no package called ‘Biobase’’\nFailed with error:  ‘there is no package called ‘Biobase’’\n",
        "> ",
        "install.packages(\"BiocManager\")",
        "\u001BG1;\u001BH1;Error\u001Bh in install.packages : Updating loaded packages\n\u001Bg",
        "\u001BG3;Restarting R session...\u001Bg",
        "Installing package into ‘C:/Users/Ari/AppData/Local/R/win-library/4.5’\n(as ‘lib’ is unspecified)\ntrying URL 'https://cran.rstudio.com/bin/windows/contrib/4.5/BiocManager_1.30.25.zip'\nContent type 'application/zip' length 506367 bytes (494 KB)\ndownloaded 494 KB\n\n",
        "package ‘BiocManager’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\Ari\\AppData\\Local\\Temp\\Rtmpes2Ea9\\downloaded_packages\n",
        "> ",
        "BiocManager::install(\"Biobase\")",
        "\u001BG3;'getOption(\"repos\")' replaces Bioconductor standard repositories, see\n'help(\"repositories\", package = \"BiocManager\")' for details.\nReplacement repositories:\n    CRAN: https://cran.rstudio.com/\n\u001Bg\u001BG3;Bioconductor version 3.21 (BiocManager 1.30.25), R 4.5.0 (2025-04-11 ucrt)\n\u001Bg\u001BG3;Installing package(s) 'BiocVersion', 'Biobase'\n\u001Bg\u001BG3;also installing the dependency ‘BiocGenerics’\n\n\u001Bgtrying URL 'https://bioconductor.org/packages/3.21/bioc/bin/windows/contrib/4.5/BiocGenerics_0.54.0.zip'\ntrying URL 'https",
        "://bioconductor.org/packages/3.21/bioc/bin/windows/contrib/4.5/BiocVersion_3.21.1.zip'\ntrying URL 'https://bioconductor.org/packages/3.21/bioc/bin/windows/contrib/4.5/Biobase_2.68.0.zip'\n",
        "package ‘BiocGenerics’ successfully unpacked and MD5 sums checked\npackage ‘BiocVersion’ successfully unpacked and MD5 sums checked\npackage ‘Biobase’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\Ari\\AppData\\Local\\Temp\\Rtmpes2Ea9\\downloaded_packages\n",
        "\u001BG3;Installation paths not writeable, unable to update packages\n  path: C:/Program Files/R/R-4.5.0/library\n  packages:\n    lattice, mgcv\n\u001Bg",
        "> ",
        "install.packages(\"NMF\", \"caret\", \"inflection\")",
        "\u001BG2;\u001BH2;Warning\u001Bh in install.packages :\n  'lib = \"caret\"' is not writable\n\u001Bg\u001BG2;\u001BH2;Warning\u001Bh in install.packages :\n  unable to access index for repository inflection/src/contrib:\n  cannot open URL 'inflection/src/contrib/PACKAGES'\nWarning in install.packages :\n  package ‘NMF’ is not available for this version of R\n\nA version of this package for your version of R might be available elsewhere,\nsee the ideas at\nhttps://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages\n\u001Bg\u001BG2;\u001BH2;War",
        "ning\u001Bh in install.packages :\n  unable to access index for repository inflection/bin/windows/contrib/4.5:\n  cannot open URL 'inflection/bin/windows/contrib/4.5/PACKAGES'\u001Bg\n",
        "> ",
        "library(NMF)        # for nmf()",
        "\u001BG3;Loading required package: registry\n\u001Bg\u001BG3;Loading required package: rngtools\n\u001Bg\u001BG3;Loading required package: cluster\n\u001Bg\u001BG3;NMF - BioConductor layer [OK] | Shared memory capabilities [NO: windows] | Cores 2/2\n\u001Bg\u001BG3;\nAttaching package: ‘NMF’\n\n\u001Bg\u001BG3;The following object is masked from ‘package:generics’:\n\n    fit\n\n\u001Bg",
        "> ",
        "library(caret)      # for train/test split + RMSE",
        "\u001BG3;Loading required package: ggplot2\n\u001Bg\u001BG3;Loading required package: lattice\n\u001Bg\u001BG3;\nAttaching package: ‘caret’\n\n\u001Bg\u001BG3;The following object is masked from ‘package:generics’:\n\n    train\n\n\u001Bg",
        "> ",
        "library(inflection) # for uik()",
        "\u001BG1;\u001BH1;Error\u001Bh in library(inflection) : there is no package called ‘inflection’\n\u001Bg",
        "> ",
        "install.packages(\"inflection\")",
        "\u001BG3;Installing package into ‘C:/Users/Ari/AppData/Local/R/win-library/4.5’\n(as ‘lib’ is unspecified)\n\u001Bgtrying URL 'https://cran.rstudio.com/bin/windows/contrib/4.5/inflection_1.3.6.zip'\nContent type 'application/zip' length 306814 bytes (299 KB)\ndownloaded 299 KB\n\n",
        "package ‘inflection’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\Ari\\AppData\\Local\\Temp\\Rtmpes2Ea9\\downloaded_packages\n",
        "> ",
        "library(inflection) # for uik()",
        "> ",
        "install.packages(\"caret\")",
        "\u001BG1;\u001BH1;Error\u001Bh in install.packages : Updating loaded packages\n\u001Bg",
        "\u001BG3;Restarting R session...\u001Bg",
        "Installing package into ‘C:/Users/Ari/AppData/Local/R/win-library/4.5’\n(as ‘lib’ is unspecified)\ntrying URL 'https://cran.rstudio.com/bin/windows/contrib/4.5/caret_7.0-1.zip'\nContent type 'application/zip' length 3601760 bytes (3.4 MB)\ndownloaded 3.4 MB\n\n",
        "package ‘caret’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\Ari\\AppData\\Local\\Temp\\Rtmpo5D0uf\\downloaded_packages\n",
        "> ",
        "library(caret)      # for train/test split + RMSE",
        "\u001BG3;Loading required package: ggplot2\n\u001Bg\u001BG3;Loading required package: lattice\n\u001Bg",
        "> ",
        "############################################################################",
        "> ",
        "# 1.  LOAD DATA",
        "> ",
        "############################################################################",
        "> ",
        "new_df <- as.data.frame(read.delim(\"./Data/OSACC Data Registered Varieties 1996-2021 with variety names.txt\", header = T))",
        "> ",
        "# Check names of columns",
        "> ",
        "colnames(new_df)",
        " [1] \"HUZ\"          \"Year\"         \"Location\"     \"Test\"         \"Soil.Type\"   \n [6] \"Variety.Name\" \"Lodging\"      \"DTM\"          \"Yield\"        \"Height\"      \n[11] \"SeedWt\"       \"Protein\"      \"Oil\"         \n",
        "> ",
        "# Check all of the soil types that exists in the dataset",
        "> ",
        "unique(new_df$Soil.Type)",
        " [1] \"Loam\"       \"Clay\"       \"Clay Loam\"  \"Silt Loam\"  \"silt loam\" \n [6] \"clay\"       \"clay loam\"  \"loam\"       \"\"           \"sandy loam\"\n",
        "> ",
        "# Lower case and trim white spaces of soil types ",
        "> ",
        "new_df$Soil.Type <- tolower(trimws(new_df$Soil.Type))",
        "> ",
        "# Check cleaned up soil types",
        "> ",
        "unique(new_df$Soil.Type)",
        "[1] \"loam\"       \"clay\"       \"clay loam\"  \"silt loam\"  \"\"          \n[6] \"sandy loam\"\n",
        "> ",
        "# Create Soil Rank",
        "> ",
        "soil_Rank <- c(",
        "+ ",
        "  \"loam\"      = 1.0,",
        "+ ",
        "  \"silt loam\" = 0.8,",
        "+ ",
        "  \"clay loam\" = 0.6,",
        "+ ",
        "  \"clay\"      = 0.4,",
        "+ ",
        "  \"sand\"      = 0.2",
        "+ ",
        ")",
        "> ",
        "# Add the soil rank column to the df",
        "> ",
        "new_df$SoilRank <- soil_Rank[new_df$Soil.Type]",
        "> ",
        "# Impute with median of soil ranks listed above",
        "> ",
        "median_soil <- median(soil_Rank)",
        "> ",
        "new_df$SoilRank[is.na(new_df$SoilRank)] <- median_soil",
        "> ",
        "# Check if all NA values were assigned a number",
        "> ",
        "sum(is.na(new_df$SoilRank))",
        "[1] 0\n",
        "> ",
        "# Create a list with names of the features",
        "> ",
        "env_cols <- c(\"SoilRank\", \"HUZ\", \"DTM\",",
        "+ ",
        "                \"Lodging\", \"Height\", \"SeedWt\",",
        "+ ",
        "                \"Protein\", \"Oil\")",
        "> ",
        "# Create a new data frame to store the scaled matrix",
        "> ",
        "scaled_df <- new_df",
        "> ",
        "# Scale the matrix using min-max normalization",
        "> ",
        "for (cols in env_cols) {",
        "+ ",
        "  min_val <- min(scaled_df[[cols]], na.rm = T)",
        "+ ",
        "  max_val <- max(scaled_df[[cols]], na.rm = T)",
        "+ ",
        "  scaled_df[[cols]] <- (scaled_df[[cols]] - min_val)/(max_val - min_val)",
        "+ ",
        "}",
        "> ",
        "# Remove soilRank from matrix",
        "> ",
        "env_no_soil <- setdiff(env_cols, \"SoilRank\")",
        "> ",
        "# rows before dropping NA values",
        "> ",
        "rows_before <- nrow(scaled_df)",
        "> ",
        "# Keep rows that have no NA values in any column",
        "> ",
        "keep_rows <- complete.cases(scaled_df[, env_no_soil])",
        "> ",
        "nmf_matrix_clean <- scaled_df[keep_rows, ]",
        "> ",
        "# Check the number of rows after cleaning",
        "> ",
        "rows_after <- nrow(nmf_matrix_clean)",
        "> ",
        "cat(\"Dropped\", rows_before - rows_after,",
        "+ ",
        "    \"rows with NA in\", paste(env_no_soil, collapse = \", \"), \"\\n\")",
        "Dropped 3379 rows with NA in HUZ, DTM, Lodging, Height, SeedWt, Protein, Oil \n",
        "> ",
        "############################################################################",
        "> ",
        "# 5.  FILTER 2:  DROP LOCATIONS WITH < 6 REMAINING ROWS",
        "> ",
        "############################################################################",
        "> ",
        "loc_counts <- table(nmf_matrix_clean$Location)",
        "> ",
        "keep_locations <- names(loc_counts[loc_counts>= 6])",
        "> ",
        "nmf_matrix <- nmf_matrix_clean[nmf_matrix_clean$Location %in% keep_locations, ]",
        "> ",
        "rows_after_loc <- nrow(nmf_matrix)",
        "> ",
        "cat(\"Dropped\", rows_after - rows_after_loc,",
        "+ ",
        "    \"rows from Locations with < 6 rows;\",",
        "+ ",
        "    \"Final rows left:\", rows_after_loc, \"\\n\")",
        "Dropped 0 rows from Locations with < 6 rows; Final rows left: 28499 \n",
        "> ",
        "# Double check if there are any NA values in nmf matrix",
        "> ",
        "anyNA(nmf_matrix)",
        "[1] FALSE\n",
        "> ",
        "set.seed(2025)",
        "> ",
        "train <- createDataPartition(nmf_matrix$Yield, p = 0.8, list = FALSE)",
        "> ",
        "train_df <- nmf_matrix[train, ]",
        "> ",
        "test_df <- nmf_matrix[-train, ]",
        "> ",
        "# NMF input matrices (7 features, no SoilRank), rows = features, cols = samples",
        "> ",
        "X_train <- as.matrix(train_df[, env_no_soil])",
        "> ",
        "X_test  <- as.matrix(test_df [, env_no_soil])",
        "> ",
        "# create list of k values to find ideal value",
        "> ",
        "k_list <- 2:7",
        "> ",
        "rss_list <- numeric(length(k_list))",
        "> ",
        "set.seed(2025)",
        "> ",
        "for (i in seq_along(k_list)) {",
        "+ ",
        "  k <- k_list[i]",
        "+ ",
        "  fit <- nmf(X_train,",
        "+ ",
        "             rank = k, ",
        "+ ",
        "             nrun = 10,",
        "+ ",
        "             .options = \"N\")",
        "+ ",
        "  rss_list[i] <- residuals(fit)",
        "+ ",
        "}",
        "\u001BG1;\u001BH1;Error\u001Bh in nmf(X_train, rank = k, nrun = 10, .options = \"N\") : \n  could not find function \"nmf\"\n\u001Bg",
        "> ",
        "install.packages(\"NMF\")",
        "\u001BG1;\u001BH1;Error\u001Bh in install.packages : Updating loaded packages\n\u001Bg",
        "\u001BG3;Restarting R session...\u001Bg"
    ]
}